{"hash":"13375dfaf2ea0822d7cf6f64d0311cd93fe8b87a","data":{"post":{"title":"Integraci√≥n Continua en Proyectos Android Nativo con Github Actions","date":"December 4, 2020","content":"<p>La integraci√≥n continua en los diferentes proyectos que abordamos en el d√≠a a d√≠a es cada vez mas importante, m√°s si\ncabe, teniendo en cuenta que en la mayor√≠a de los casos trabajamos en equipo. Debido a esto, tener un sistema que nos\npermita construir nuestro software y pasar los test de manera autom√°tica frente a cada cambio puede ser de vital\nimportancia.</p>\n<h2 id=\"¬øqu√©-es-una-integraci√≥n-contin√∫a-\"><a href=\"#%C2%BFqu%C3%A9-es-una-integraci%C3%B3n-contin%C3%BAa-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>¬øQu√© es una integraci√≥n contin√∫a? üöÄ</h2>\n<p>En el p√°rrafo anterior ya podemos atisbar la respuesta a esta pregunta que nos hacemos. Una definici√≥n de integraci√≥n\ncontinua, que en particular a mi me gusta mucho, es la que nos daba Martin Fowler: \"<em>Continuous Integration is a\nsoftware development practice where members of a team integrate their work frequently, usually each person integrates at\nleast daily - leading to multiple integrations per day. Each integration is verified by an automated build (including\ntest) to detect integration errors as quickly as possible.</em>\", que en espa√±ol viene a decir algo as√≠ como que la\nintegraci√≥n continua es una pr√°ctica donde los miembros de un equipo validan la integraci√≥n de sus aportaciones\nindividuales mediante la construcci√≥n autom√°tica, incluida la ejecuci√≥n de los tests, de manera que podamos detectar\nproblemas de integraci√≥n lo m√°s pronto posible. Es obvio, que disponer de un sistema de integraci√≥n continua en nuestros\nproyectos puede aportarnos grandes ventajas destacando entre ellas la detecci√≥n temprana de errores as√≠ como el evitar\nrealizar integraciones de gran tama√±o consiguiendo a su vez disponer de una versi√≥n actualizada de nuestro sistema.</p>\n<p>Para que la integraci√≥n continua funcione de manera adecuada, los desarrolladores debemos integrar nuestros cambios\nidealmente varias veces al d√≠a para, mediante peque√±os pasos, ir acerc√°ndonos al objetivo final pudiendo tener una mayor\nflexibilidad ante posibles cambios.</p>\n<h2 id=\"¬øqu√©-es-github-actions-\"><a href=\"#%C2%BFqu%C3%A9-es-github-actions-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>¬øQu√© es Github Actions? ‚òÅ</h2>\n<p>Github Actions es un sistema que tiene como principal objetivo automatizar tareas relacionados con el ciclo de vida del\ndesarrollo de un software. Tiene como principal virtud la capacidad de automatizar, personalizar y ejecutar pipelines de\ntareas (denominados workflows) directamente en tu repositorio de Github. La ejecuci√≥n de estas tareas se realizan\ndespu√©s de que un evento concreto haya ocurrido. Los eventos disparadores del workflow son eventos relacionados con el\nrepositorio, como pueden ser una pull-request, push, merge, etc.\nLa <a href=\"https://docs.github.com/es/free-pro-team@latest/actions/reference/events-that-trigger-workflows\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lista completa de eventos</a>\npuede ser observada en la documentaci√≥n de Github Actions. Adem√°s, permite combinar diferentes acciones dentro de un\nmismo workflow para la ejecuci√≥n de las diferentes tareas, as√≠ como ofrece tambi√©n la posibilidad de tener varios\nworkflows en un mismo repositorio. Finalmente, cabe destacar que dispone de\nun <a href=\"https://github.com/marketplace?type=actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">marketplace de acciones</a> creadas por otros desarrolladores.</p>\n<h2 id=\"pasos-necesarios-para-ejecutar-los-test-en-android-üß™\"><a href=\"#pasos-necesarios-para-ejecutar-los-test-en-android-%F0%9F%A7%AA\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pasos necesarios para ejecutar los test en Android üß™</h2>\n<p>Para compilar un proyecto Android y generar el APK de la aplicaci√≥n, es necesario tener instalado el SDK de Android\ncorrespondiente a la version definida en el propio proyecto Android que estamos desarrollando. Para realizar esto en el\nsistema de integraci√≥n continua utilizando Github Actions, una opci√≥n podr√≠a ser el crear una imagen de docker que\ncontenga todo lo necesario para realizar este proceso. En el caso que nos ata√±e, las im√°genes de Ubuntu disponibles en\nGithub Actions ya tienen gran cantidad de software preinstalado, entre el que se encuentra el SDK de Android en todas su\nversiones, por lo que no necesitar√≠amos crear una imagen con docker. La lista completa de software instalado en la\n√∫ltima versi√≥n de Ubuntu disponible en Github Actions puede\nverse <a href=\"https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aqu√≠</a>.</p>\n<p>Una vez hecha la build del proyecto simplemente necesitar√≠amos ejecutar los test utilizando\ngradle, <code>gradlew testDebugUnitTest</code>.</p>\n<h2 id=\"ejemplo-de-workflow-de-ci-ü§Ø\"><a href=\"#ejemplo-de-workflow-de-ci-%F0%9F%A4%AF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ejemplo de workflow de CI ü§Ø</h2>\n<p>Para crear nuestro workflow de Github Actions basta con crear un directorio <code>workflows</code> dentro<code>.Github</code>  de nuestro\nproyecto y crear ah√≠ nuestro fichero con extensi√≥n <code>.yml</code>, en nuestro caso <code>ci.yml</code>. Cuando hagamos <code>push</code> de este\nfichero, Github detectar√° todo lo que est√© dentro de la carpeta <code>workflows</code> como <code>workflows</code> de Github Actions.</p>\n<p>A continuaci√≥n, podemos observar un ejemplo de workflow de integraci√≥n continua de un proyecto Android real.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Android CI workflow</span>\n\n<span style=\"color: #F78C6C\">on</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">push </span><span style=\"color: #89DDFF\">]</span>\n\n<span style=\"color: #F07178\">jobs</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># jobs a ejecutar</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #F07178\">build</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># nombre del job a ejecutar</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">runs-on</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">ubuntu-latest</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># sistema operativo donde ejecutaremos el job</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">steps</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># pasos del workflow</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">uses</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">actions/checkout@v2</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># checkout del proyecto</span>\n\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Decode google-services.json</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># tarea para decodificar los google services</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">env</span><span style=\"color: #89DDFF\">:</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">GOOGLE_SERVICE_SECRET</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">${{ secrets.GOOGLE_SERVICE }}</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># almacenamos secret en   variable de entorno</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">run</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">echo $GOOGLE_SERVICE_SECRET &gt; ./app/google-services.json</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># creamos el fichero google-services.json en la ruta correspondiente</span>\n\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Make gradlew executable</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># damos permisos de ejecuci√≥n al fichero gradlew</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">run</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">chmod +x ./gradlew</span>\n\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Build Android project</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># compilamos el proyecto</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">run</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">./gradlew assembleDebug</span>\n\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Launch unit tests</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># lanzamos los tests</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">run</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">./gradlew testDebugUnitTest</span>\n\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Android Test Report</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># visualizamos el resultado de los tests</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">uses</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">asadmansr/android-test-report-action@v1.2.0</span></code></pre>\n<p>Destacar que este workflow se ejecutar√° cada vez que se haga push a la rama master del repositorio del proyecto, como\npuede verse en la clave <code>on</code> en el snippet de c√≥digo anterior.</p>\n<p>Por otro lado, este proyecto hace uso de diferentes servicios de Google como Firebase, y por tanto las claves necesarias\npara comunicarnos con dichos servicios son necesarias para compilar el proyecto y generar el ejecutable. No es una buena\npr√°ctica subir dichas claves a los repositorios ya que cualquier persona que tenga acceso al mismo podr√≠a acceder a\nellas. Github provee un servicio llamado secrets el cual nos permite almacenar claves y otro tipo de contenido sensible\nde manera segura. En nuestro caso guardamos el contenido del fichero google-services.json en Github secrets y\nposteriormente en la tarea <code>Decode google-services.json</code> lo almacenamos en una variable de entorno para posteriormente\nalmacenarla en su fichero correspondiente para usarlo en la compilaci√≥n del proyecto pero sin persistirlo luego en\nnuestro repositorio.</p>\n<p>El siguiente paso consiste en dar permisos de ejecuci√≥n al fichero <code>gradlew</code> para compilar el proyecto y luego lanzar\nlos tests del mismo.</p>\n<p>Finalmente, debido a que gradlew genera un fichero de reporte con el resultado de los tests, debemos visualizar el\ncontenido de los mismos parseando el fichero de reporte generado. En este paso, haciendo uso del marketplace encontramos\nla acci√≥n <code>android-test-report-action</code> que se encarga de parsear y mostrarnos el resultado del reporte y que es la\nutilizada en el √∫ltimo paso del workflow.</p>\n<p>Finalmente, una vez hemos hecho push de nuestro fichero podemos ver las diferentes ejecuciones de nuestro workflow en la\nsecci√≥n Actions de en nuestro repositorio de Github como podemos observar en la imagen que se muestra a continuaci√≥n.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1261 869' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-baa0cfa6e965b34e44dc136932b02590'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-baa0cfa6e965b34e44dc136932b02590)' width='1261' height='869' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAsCAYAAADVX77/AAAACXBIWXMAAAsSAAALEgHS3X78AAALGklEQVRo3s1aWY8cVxVuiV8A4hEpcbzO4hmPPV5iW5EDhgQHrIATxbKT8IAUiRce8hgIfwAJ%2bA1IiCCUEP4EwiFAZjzds0/v%2b95VXV3VtRzOd6pudXVPjz1LN0pLR/fWvbfucu7ZvlMde%2bn8PF24eJnu3X9AswtX6MzMgtBpVV4AXeT6Ip2du0RnZ4fp3JxPGHvq3By9eHaOXjgzIyXeQx1rgF48O0svnJ1hmuXni9KG/lNcqnUnTryH0wsv02ne60uyziLvdyk40wLFvnPqHP3g3n367e/%2bQD968y06M7tId%2b7%2bkG7f%2bT5dv32Hy7t0%2b9XXaOnarYApi8Hki/I8w0wDAxeXb9JPHjyiN%2b7/lB48fI/u/fhNWrp6kx4%2b%2bhnd5DnufO8Nevz4fXrwzrv09sPHdO3mK/RdXvfho/fplVfvCvOwqUkSDnxubpFuvP6Y5q7cosvXbtLy9Vv0iw9%2bTvNL16U/dvrCPF28fJ0P/TpdunpLDja7uCwHm1lY9uuLV%2bWQIgFRggTML9H5%2bcsiBRg7f%2bkqLSy/THOXlrl9Seb257pCF5eu0cKVG9x2jedbkvGL/DyzwHMz449L52Qv4/uwh4WlK3Sex%2bAMWPfy1RvSjv7Yky%2b%2bpLX4Ov33q1WKx%2bO0vrFOifUErTMlEgmKJ/z6WjxBm9y3tblOm5vDJfrWEhtCq0/jtLK6Ritcrq4luFzjMi6ENjz7bYlwLPqe8hyHojWshT1uUmJjU%2brqfcyJ/vi634462tVeZH9cfsVrqr5Yz7SobztUa2pU7hDlGi5l6y7lmh7lG57US20izXBot%2bLuo%2b2yS6ZN1Gq1qdXWaNo/x/WoWm9Srd6gSq1Gmm5Iu%2bu6UnZ7JhVLFeoaPXn2PE/KerNN1VqdbMchLxiLXwwTgQntjk7lRo9KdYOKTIWgrDQMylW71Ox0KVczKFMxKF3u0m5RpxSX2wWdtK7J72vUZCYYPUvm65l9Mi2f/OfRtkH76LNqG30fdRyswetg3zhQs92Rtq5h8BiTOnpX%2blphu0/YX73RZIZ1qds1eJ%2bmzBdDI7hqOy5zkbnjuUKoO44tdebjoJ%2bJgjZFNkuQ1bdljMOEsm/b4QEgYX6bP25cG0rVFm335x2MBWEN7FntW7X77zsHtPvvRNswd8gAiBJucHc3yVzVZJOlSp3yuQIlM3kZ3GIpqdYalMnmKcm0m8xQNl8kfp3SPG57L0kbO3u0ze0WLwixyxfLlMlkaS%2bVkTUwb6Vap1we8%2bZYnBs8tyO3WqlUaXsnSblCkffkiqgXSmXaS6Ypmc7w7RpyQMWYSVDIANWADcqNMEHsrMgtSl/QH4olxrLoGY069ZpNMtstMltN6nd16ikxDsZCKpRkqLXU3BBJzK1EU24o6Lf6fntUUiZFsXa7vc/QwHAo4xEUgbg/49e3iGwmVhuy%2bz4dNK83ME5RQxVpCsfKcG%2b0bXIU63Q6UjFM3xCZfeiLt4/Qrhl8E2zyNcMmvce3AbvAItngmzdYCnqWxWLfoo6m881ZoWWOHnb/szfChPGMPqj9pL%2bYxpvtm2w5CylqlrPUrubgVMYMdVlPe6TrJlXYOzTbPWkzzR771adsO/bYt8YlnlhZ4ZiC/TDEfpqbP%2blPJMDsapSs2fTRZyX6zedl%2bvXfuPw7yjJ9/LmiirT/6rMiffRpkT7m%2boefFOivX7aeuYDLC0AKvo6kLiVGtk6f/luj2LtP6Zu/3KBvMX37w036xgdxir21QrG3VwalondWKXbvP/Ta79MySUvrit%2bFh0BZqdaoXKmx4epNTXdPSko9Y4bOG9dd%2btM/m/SXf7Xpky9a9OcnLSkPIoz74z%2ba9GTPj8KU14C17kvdt9xwWa7rfb0lQHkBS2%2bSa3bYfTWlbnXqZDI9z/rDX8PdWQg2JNBgu2CxmxRSEd50CIYZMYRaxxp5ln5x37YYeZSqHy5QGAAvgJ/Z9ztxAFh9lHgZQQ6IDb4cMCTHk9sFJxGObm7v0frWLm1xIKUbJsfk1tQIh2mz2uXyJQ6UquyVTAmSUuksFco1qXc0g7K5IgdqJQnIcCEl7ssVylRvdeSsQxKAgKiDeJ7LMkdfdY7COtDncoWKxRJbe3Osu4IEAIBgQ4gUUcoNBVw3TGsK1BdGyEGZFGOwtnrGHnxGdOVC8I7W7UkbSqjtkARAZ5XvdnDzga44iK2BoLzx/tof5/khKr8PXCCRHzMF9mBgAyZtC4YNmq/X/r7gfXAWXM6QJ4rsHXhiiAGH9ZtDkRr5G%2bhz9Nc2OrS9tUM7wAI7u7TKsQFi%2bGkHMiM7DNfKMtaAJFcZXzQaA3dt28MXGjLgMK7jIAmQEhEhqw8ATInVBrmBjqaxWOoCTwWiQsU4aqwzjK3zc71el3h/UgyK7jOby1ORGQDJHFLZALFCgvYx4KiLKQaE9UDcbAY8juOrkUDZ4Nmv%2b8%2bKnOB9X0UCivprb3/bYQkHjV6YOy4OODkDPDmEYRpiNHtB8DO52/TGAKTnk2H0xCb1QWzfDgyETsoAlLbrULvboTzrXZWjQFhYx/HhLG69HwRFjtRt2VQoFZFyQAMd7fRciuctStdtcr1n49Lonnb3Uv5%2b2AY02Q2qd2R92w6ZOxEVUFi2wUgQug6XirJUrlKNDRAAl0qZIXfYbDSkDgJ6bPMe6hxG%2b7ahzv0tYYrKAXYtDrbsw98%2bfmU%2bOOxMqzmYy5uOCrCeud5zRXkI349rH3qHQrsQqkHUJhyC9gEzd0o2wFcBm7SeToV8kUpseQscOKWSKfEGR9H30VscMGM4WXKYPSFhqrPk6bouCdMBIwZxxMSMoOsBD/Qk94d8YSqdEYIbQkrLCLO2lhhJycryc7fbDcWTJhInDOZADJLN5ETldL0b7lfZmbFxwPHdIIkaaLou6XXYAp0PjTQ12vAMfUemqM2eAnop1GoNxQEHQlfv6G5QwnrRf3dMmm/CNsANdPu47u4guOqFsu/TURjwPDWbDAMwEZjAN22yxU1nM7S1vUt5jsIKxSI/5%2bTbwkl%2bFqPOus5utucemskqFIYX0Ph8kAb17lRsAGZ3%2bpbk%2btOsdzCCoDTbA7g5ZIngBtuBWAJxNgP312AfrWn4atOiBm%2b40YDraoe2QeODb5V47pYziAO85xhBCYULVCgU5bsG3PAAC/g2wPUmHAp7AdDoB4GM7ai8viURmRV8UwBSBLQGod00rbAM200rEmIfJxIkQaMKlY7DMZONA%2bAKHT8VJkwAtOaDhBb%2bBKGwG8EJR7EBdmTtZ%2bYET8KAUTi8s70jn9Z2dvdobS1OyVTmxHHAseFwLgqHm6EcqfzGRFVAwWH5ZF2ty/c86DaMD9zgEBxuROBwbbJwOMoEwGFgAcT%2bFGHqVBjgBjYgqmNqugHQcSIUgcMBZB0NZU%2bqAkoNhvc0DSyAyfDRs2tIAgSfyWDVEeXh%2bbh24KRwGJFnX9L0fqp%2b%2bFvjhOMAD1aeo7rdZJISG1us%2byl2h1nJECMaDBMhATQWnD4Ch0chsfLTgMNrOZNSR4TD%2bJwON4ikLlwujYXDk7QBvC2Bu4HPRwwOWAxbAH8vbdyHzdSqVR8Wyz89mn58ENiGhqTKGsIo8dt8asPyyLQHEnGYKLAkme2GrGfb/w847B3Nwh/u89WE4bA7RTisMxwussiVg%2b8IKVYDJCWO7wa9E8FhuD5EgIDEQJ9D2GPSOUHAYeQEFRxOB3A4XygF/yYxBQablh/toa4o%2bh%2bCSZD6ISWWY1eIPKWmDeDw1GwAngUOaz78xT%2bzcFjfM7SEBA5LSszHAkiRTystruDwKIOjiRH8/gdpwi9G%2b1ZpfwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1261\" alt=\"Github Actions Web\" data-srcset=\"/assets/static/GHActionsTab.82a2fbd.42a7671bf5c9a106d7b05ffe517695b5.png 480w, /assets/static/GHActionsTab.3d24d65.42a7671bf5c9a106d7b05ffe517695b5.png 1261w\" data-sizes=\"(max-width: 1261px) 100vw, 1261px\" data-src=\"/assets/static/GHActionsTab.3d24d65.42a7671bf5c9a106d7b05ffe517695b5.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/GHActionsTab.3d24d65.42a7671bf5c9a106d7b05ffe517695b5.png\" width=\"1261\" alt=\"Github Actions Web\"></noscript></p>\n<h2 id=\"extra-notificaci√≥n-de-fallo-del-workflow-v√≠a-slack-\"><a href=\"#extra-notificaci%C3%B3n-de-fallo-del-workflow-v%C3%ADa-slack-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Extra: notificaci√≥n de fallo del workflow v√≠a Slack ‚úâ</h2>\n<p>Un aspecto importante en un sistema de integraci√≥n continua la capacidad de conocer el estado del mismo en todo momento.\nEl hecho de disponer de un sistema capaz de notificar frente a un fallo en la integraci√≥n continua es una feature de\nbastante importancia en este tipo de sistemas. Para este cometido, en el proyecto anteriormente comentado se ha\nimplementado un nuevo workflow capaz de escuchar cuando el workflow de integraci√≥n continua falla y enviar una\nnotificaci√≥n a un canal de slack en concreto.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Slack Notifier</span>\n\n<span style=\"color: #F78C6C\">on</span><span style=\"color: #89DDFF\">:</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #F07178\">workflow_run</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># trigger utilizado</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">workflows</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Android CI workflow</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">]</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># nombre del workflow a escuchar</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">branches</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">master </span><span style=\"color: #89DDFF\">]</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">types</span><span style=\"color: #89DDFF\">:</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #C3E88D\">completed</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># escuchar cuando el workflow ha terminado de ejecutarse</span>\n\n<span style=\"color: #F07178\">jobs</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># jobs a ejecutar</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #F07178\">slackNotification</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># nombre del job a ejecutar</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">runs-on</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">ubuntu-latest</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># sistema operativo donde ejecutaremos el job</span>\n\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #F07178\">steps</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># pasos del workflow</span>\n<span style=\"color: #FFFFFF\">      </span><span style=\"color: #89DDFF\">- </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">Slack Notification</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># notificaci√≥n al canal general </span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">uses</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">rtCamp/action-slack-notify@v2</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">env</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">#variables de entorno relacionadas con el mensaje de slack a enviar</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">SLACK_CHANNEL</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">general</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">SLACK_COLOR</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#3278BD</span><span style=\"color: #89DDFF\">'</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">SLACK_USERNAME</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">WoL Assistant Bot</span><span style=\"color: #89DDFF\">\"</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">SLACK_MESSAGE</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">Continuous Integration Broken</span><span style=\"color: #89DDFF\">\"</span>\n<span style=\"color: #FFFFFF\">          </span><span style=\"color: #F07178\">SLACK_WEBHOOK</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">${{ secrets.SLACK_WEBHOOK }}</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># webhook del canal del slack al que enviar</span>\n<span style=\"color: #FFFFFF\">        </span><span style=\"color: #F07178\">if</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C3E88D\">env.WORKFLOW_CONCLUSION == 'failure'</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\"># condici√≥n para enviar mensaje solo en casos de que el workflow de CI falle</span></code></pre>\n<p>En este workflow se ha utilizado la Github Action <code>action-slack-notify</code> que nos permite enviar un mensaje a un canal de\nslack a trav√©s del uso de diferentes par√°metros. Destacar de nuevo, el uso de Github secrets para almacenar el valor del\nwebhook ya que es nuevamente informaci√≥n sensible.</p>\n<h2 id=\"referencias\"><a href=\"#referencias\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Referencias</h2>\n<p><a href=\"https://docs.github.com/es/free-pro-team@latest/actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Documentaci√≥n oficial de Github Actions</a></p>\n<p><a href=\"https://github.com/marketplace?type=actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Marketplace de Github Actions</a></p>\n<p><a href=\"https://www.martinfowler.com/articles/continuousIntegration.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Post sobre integraci√≥n continua de Martin Fowler</a></p>\n","tags":[{"title":"Continuous Integration","path":"/tag/Continuous%20Integration/"},{"title":"Github Actions","path":"/tag/Github%20Actions/"},{"title":"CI","path":"/tag/CI/"}]}},"context":{}}